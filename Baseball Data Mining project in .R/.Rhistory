library(ggplot2)
library(dplyr)
install.packages("dplyr")
library(dplyr)
library(Lahman)
library(VIM)
df<-merge(Batting,Master,by="playerID")
df$stint <- NULL
df$birthMonth <- NULL
df$birthState <- NULL
df$birthCountry <- NULL
df$birthCity <- NULL
df$birthDay <- NULL
df$deathDay <-NULL
df$deathYear<-NULL
df$deathCity<-NULL
df$deathState<-NULL
df$deathCountry<-NULL
df$deathMonth<-NULL
df$nameGiven<-NULL
df$finalGame<-NULL
df$debut<-NULL
df$deathDate<-NULL
df$retroID<-NULL
df$bbrefID<-NULL
df$birthDate<-NULL
head(sdf)
qplot(data = sdf, x =  sdf$RBI) + ylab("Number of RBI per year")
sdf <- as.data.frame(subset(df,  yearID > 2004 & H > 0 & AB > 10))
View(sdf)
View(sdf)
summary(sdf$weight)
boxplot(sdf$weight)
qplot(data = sdf, x =  sdf$RBI) + ylab("Number of RBI per year")
a=aggr(sdf,prop=FALSE,numbers=TRUE)
qplot(data = sdf, x =  sdf$weight)
a=aggr(sdf,prop=FALSE,numbers=TRUE)
summary(a)
head(sdf)
summary(sdf)
View(sdf)
View(sdf)
View(df)
View(df)
data("Batting")
View(Batting)
battingStats()
b <- battingStats()
View(b)
View(b)
View(sdf)
View(sdf)
library(Lahman)
data("Batting")
data("Master")
library(Lahman)
data("Batting")
data("Master")
data("battingLabels")
batting <- battingStats()
View(batting)
View(batting)
library(Lahman)
data("Batting")
data("Master")
data("battingLabels")
library(Lahman)
batting <- battingStats()
View(batting)
View(batting)
df<-merge(batting,Master,by="playerID")
View(df)
View(df)
df$stint <- NULL
df$birthMonth <- NULL
df$birthState <- NULL
df$birthCountry <- NULL
df$birthCity <- NULL
df$birthDay <- NULL
df$deathDay <-NULL
df$deathYear<-NULL
df$deathCity<-NULL
df$deathState<-NULL
df$deathCountry<-NULL
df$deathMonth<-NULL
df$nameGiven<-NULL
df$finalGame<-NULL
df$debut<-NULL
df$deathDate<-NULL
df$retroID<-NULL
df$bbrefID<-NULL
df$birthDate<-NULL
View(df)
View(df)
View(batting)
View(batting)
View(df)
View(df)
sdf <- as.data.frame(subset(df,  yearID > 2004 & H > 0 & AB > 10))
View(sdf)
View(sdf)
head(sdf)
summary(sdf)
a=aggr(sdf,prop=FALSE,numbers=TRUE)
library(VIM)
a=aggr(sdf,prop=FALSE,numbers=TRUE)
summary(a)
hist(sdf$HR,sdf$HR>0)
hist(sdf$HR)
boxplot(sdf$HR)
sdf$age <- sdf$yearID - sdf$birthYear
View(sdf)
View(sdf)
sdf <- as.data.frame(subset(df,  yearID > 2003 & H > 0 & AB > 10))
sdf$age <- sdf$yearID - sdf$birthYear
ssdf <- sdf[c("playerID","yearID","BA","SlugPct","OBP", "OPS", "BABIP") ]
View(ssdf)
ssdf = rename(df1,c("BA"="prevBA","SlugPct"="prevSlugPct","OBP"="prevOBP",
"OPS"="prevOPS","BABIP"="prevBABIP"))
library(dplyr)
ssdf = rename(df1,c("BA"="prevBA","SlugPct"="prevSlugPct","OBP"="prevOBP",
"OPS"="prevOPS","BABIP"="prevBABIP"))
ssdf = rename(ssdf,c("BA"="prevBA","SlugPct"="prevSlugPct","OBP"="prevOBP",
"OPS"="prevOPS","BABIP"="prevBABIP"))
library(dplyr)
ssdf = rename(ssdf,c("BA"="prevBA","SlugPct"="prevSlugPct","OBP"="prevOBP",
"OPS"="prevOPS","BABIP"="prevBABIP"))
library(Lahman)
data("Batting")
batting <- battingStats()
df<-merge(batting,Master,by="playerID")
df$stint <- NULL
df$birthMonth <- NULL
df$birthState <- NULL
df$birthCountry <- NULL
df$birthCity <- NULL
df$birthDay <- NULL
df$deathDay <-NULL
df$deathYear<-NULL
df$deathCity<-NULL
df$deathState<-NULL
df$deathCountry<-NULL
df$deathMonth<-NULL
df$nameGiven<-NULL
df$finalGame<-NULL
df$debut<-NULL
df$deathDate<-NULL
df$retroID<-NULL
df$bbrefID<-NULL
df$birthDate<-NULL
#changed to 2003
sdf <- as.data.frame(subset(df,  yearID > 2003 & H > 0 & AB > 10))
library(VIM)
sdf$age <- sdf$yearID - sdf$birthYear
library(plyr)
ssdf <- sdf[c("playerID","yearID","BA","SlugPct","OBP", "OPS", "BABIP") ]
ssdf = rename(ssdf,c("BA"="prevBA","SlugPct"="prevSlugPct","OBP"="prevOBP",
"OPS"="prevOPS","BABIP"="prevBABIP"))
View(ssdf)
View(ssdf)
ssdf <- sdf[c("playerID","yearID","BA","SlugPct","OBP", "OPS", "BABIP") ]
ssdf = rename(ssdf,c("BA"="nextBA","SlugPct"="nextSlugPct","OBP"="nextOBP",
"OPS"="nextOPS","BABIP"="nextBABIP"))
ssdf$yearID <- ssdf$yearID - 1
View(ssdf)
View(ssdf)
ndf <- merge(sdf, ssdf)
View(ndf)
View(ndf)
train.size = round(0.75*nrow(ndf))
set.seed(1234)
id.train = sample(1:nrow(ndf),train.size,replace=F)
ndf.train = ndf[id.train,]
ndf.val = ndf[-id.train,]
library(rpart)
rdtree = rpart(nextBA ~ G + AB + R + H + RBI + BA + OPS + bats + age, data=myddt.train, method="class", parms=list(split="gini"))
rdtree = rpart(nextBA ~ G + AB + R + H + RBI + BA + OPS + bats + age, data=ndf.train, method="anova", parms=list(split="gini"))
prp(rdtree, type=4, extra=104, fallen.leaves=FALSE, main="Decision Tree", faclen=0)
library(rpart.plot)
prp(rdtree, type=4, extra=104, fallen.leaves=FALSE, main="Decision Tree", faclen=0)
prp(rdtree, type=4, fallen.leaves=FALSE, main="Decision Tree", faclen=0)
rdtree = rpart(nextBA ~ G + AB + R + H + RBI + BA + bats + age, data=ndf.train, method="anova", parms=list(split="gini"))
prp(rdtree, type=4, fallen.leaves=FALSE, main="Decision Tree", faclen=0)
prp(rdtree, type=4, fallen.leaves=T, main="Decision Tree", faclen=0)
prp(rdtree, type=3, fallen.leaves=T, main="Decision Tree", faclen=0)
prp(rdtree, type=1, fallen.leaves=T, main="Decision Tree", faclen=0)
prp(rdtree, type=0, fallen.leaves=T, main="Decision Tree", faclen=0)
prp(rdtree, type=5, fallen.leaves=T, main="Decision Tree", faclen=0)
prp(rdtree, type=4, fallen.leaves=T, main="Decision Tree", faclen=0)
rdtree = rpart(nextBA ~ G + AB + R + H + RBI + BA + bats + age, data=ndf.train, method="anova")
prp(rdtree, type=4, fallen.leaves=T, main="Decision Tree", faclen=0)
rdtree = rpart(nextBA ~ G + AB + R + H + RBI + BA + bats + age, data=ndf.train, method="anova")
prp(rdtree, type=4, fallen.leaves=T, main="Decision Tree", faclen=0)
rdtree = rpart(nextBA ~ G + AB + R + H + RBI + BA + bats + age, data=ndf.train, method="anova", parms=list(split="information"))
prp(rdtree, type=4, fallen.leaves=T, main="Decision Tree", faclen=0)
prp(rdtree, type=4, fallen.leaves=F, main="Decision Tree", faclen=0)
barplot(rdtree$variable.importance)
rdtree = rpart(nextBA ~ G + AB + R  + RBI + BA + bats + age, data=ndf.train, method="anova", parms=list(split="information"))
prp(rdtree, type=4, fallen.leaves=F, main="Decision Tree", faclen=0)
barplot(rdtree$variable.importance)
rdtree = rpart(nextBA ~ G + AB + BA + bats + age, data=ndf.train, method="anova", parms=list(split="information"))
prp(rdtree, type=4, fallen.leaves=F, main="Decision Tree", faclen=0)
rdtree.pred = predict(dtree, newdata=ndf.val,type="anova")
rdtree.pred = predict(rdtree, newdata=ndf.val,type="anova")
rdtree.pred = predict(rdtree, newdata=ndf.val,type="vector")
rdtree.perf = table(ndf.val$BA, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.perf
rdtree.pred = predict(rdtree, newdata=ndf.val,type="matrix")
rdtree.perf = table(ndf.val$BA, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.perf
rdtree.pred = predict(rdtree, newdata=ndf.val,type="matrix")
rdtree.perf = table(ndf.val$nextBA, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.perf
rdtree.pred = predict(rdtree, newdata=ndf.val,type="vector")
rdtree.perf = table(ndf.val$nextBA, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.perf
rdtree.pred = predict(rdtree, newdata=ndf.val,type="matrix")
rdtree.perf = table(ndf.val$nextBA, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.perf
prop.table(rdtree.perf,1)
cutpoints <- quantile(ndf$nextBA, (0:bin)/bin)
bin = 4
cutpoints <- quantile(ndf$nextBA, (0:bin)/bin)
ndf$nextBAbin = cut(ndf$nextBA, cutpoints, include.lowest = T)
View(ndf)
View(ndf)
ndf.train = ndf[id.train,]
ndf.val = ndf[-id.train,]
rdtree = rpart(nextBAbin ~ G + AB + BA + bats + age, data=ndf.train, method="anova", parms=list(split="information"))
prp(rdtree, type=4, fallen.leaves=F, main="Decision Tree", faclen=0)
barplot(rdtree$variable.importance)
rdtree = rpart(nextBAbin ~ G + AB + BA + bats + age, data=ndf.train, method="class", parms=list(split="information"))
prp(rdtree, type=4, extra=104, fallen.leaves=F, main="Decision Tree", faclen=0)
barplot(rdtree$variable.importance)
cutpoints
type(cutpoints)
ndf$nextBAbinf = factor(ndf$nextBA, levels = cutpoints, labels = c("1stQtr","2ndQtr","3rdQtr","4thQtr"))
ndf$nextBAbinf = factor(ndf$nextBAbin, levels = cutpoints, labels = c("1stQtr","2ndQtr","3rdQtr","4thQtr"))
ndf$nextBAbinf = factor(ndf$nextBAbin, levels = cutpoints, labels = c("1stQtr","2ndQtr","3rdQtr","4thQtr","Other"))
View(ndf)
View(ndf)
ndf$nextBAbinf = factor(ndf$nextBAbin, levels = c([0.02,0.209],(0.209,0.248],(0.248,0.277],(0.277,0.636]), labels = c("1stQtr","2ndQtr","3rdQtr","4thQtr","Other"))
ndf$nextBAbinf = factor(ndf$nextBAbin, levels = c("[0.02,0.209]","(0.209,0.248]","(0.248,0.277]","(0.277,0.636]"), labels = c("1stQtr","2ndQtr","3rdQtr","4thQtr","Other"))
ndf$nextBAbinf = factor(ndf$nextBAbin, levels = c("[0.02,0.209]","(0.209,0.248]","(0.248,0.277]","(0.277,0.636]"), labels = c("1stQtr","2ndQtr","3rdQtr","4thQtr"))
ndf.train = ndf[id.train,]
ndf.val = ndf[-id.train,]
View(ndf)
View(ndf)
rdtree = rpart(nextBA ~ G + AB + BA + bats + age, data=ndf.train, method="class", parms=list(split="information"))
prp(rdtree, type=4, fallen.leaves=F, main="Decision Tree", faclen=0)
prp(rdtree, type=4,extra=104 fallen.leaves=F, main="Decision Tree", faclen=0)
prp(rdtree, type=4,extra=104, fallen.leaves=F, main="Decision Tree", faclen=0)
rdtree = rpart(nextBAbinf ~ G + AB + BA + bats + age, data=ndf.train, method="class", parms=list(split="information"))
prp(rdtree, type=4, extra=104, fallen.leaves=F, main="Decision Tree", faclen=0)
barplot(rdtree$variable.importance)
#classification decision tree using binned nextBA
rdtree = rpart(nextBAbinf ~ G + AB + BA + bats + age, data=ndf.train, method="class", parms=list(split="information"))
prp(rdtree, type=4, extra=104, fallen.leaves=F, main="Decision Tree", faclen=0)
barplot(rdtree$variable.importance)
rdtree.pred = predict(rdtree, newdata=ndf.val,type="matrix")
rdtree.perf = table(ndf.val$nextBA, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.pred = predict(rdtree, newdata=ndf.val,type="class")
rdtree.perf = table(ndf.val$nextBAbinf, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.perf
prop.table(rdtree.perf,1)
bin = 5
c(cutpoints)
cutpoints[0]
cutpoints[2]
cutpoints[2,2]
cutpoints[2,1]
cutpoints[2][0]
cutpoints[2][1]
bin = 4
cutpoints <- quantile(ndf$nextBA, (0:bin)/bin)
ndf$nextBAbin = cut(ndf$nextBA, cutpoints, include.lowest = T)
ndf$nextBAbinf = factor(ndf$nextBAbin, levels = c("[0.02,0.209]","(0.209,0.248]","(0.248,0.277]","(0.277,0.636]"), labels = c("1stQtr","2ndQtr","3rdQtr","4thQtr"))
ndf.train = ndf[id.train,]
ndf.val = ndf[-id.train,]
#classification decision tree using binned nextBA
rdtree = rpart(nextBAbinf ~ G + AB + BA + bats + age, data=ndf.train, method="class", parms=list(split="gini"))
prp(rdtree, type=4, extra=104, fallen.leaves=F, main="Decision Tree", faclen=0)
rdtree.perf
prop.table(rdtree.perf,1)
bin = 5
bin = 5
cutpoints <- quantile(ndf$nextBA, (0:bin)/bin)
ndf$nextBAbin = cut(ndf$nextBA, cutpoints, include.lowest = T)
View(ndf)
View(ndf)
ndf$nextBAbinf = factor(ndf$nextBAbin,
levels = c("[0.02,0.195]","(0.195,0.235]",
"(0.235,0.26]","(0.26,0.283]","(0.283,0.636]"),
labels = c("1stQtl","2ndQtl","3rdQtl","4thQtl","5thQtl"))
ndf.train = ndf[id.train,]
ndf.val = ndf[-id.train,]
#classification decision tree using binned nextBA
rdtree = rpart(nextBAbinf ~ G + AB + BA + bats + age, data=ndf.train, method="class", parms=list(split="gini"))
prp(rdtree, type=4, extra=104, fallen.leaves=F, main="Decision Tree", faclen=0)
barplot(rdtree$variable.importance)
rdtree.pred = predict(rdtree, newdata=ndf.val,type="class")
rdtree.perf = table(ndf.val$nextBAbinf, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.perf
rdtree.pred
rdtree.perf = table(ndf.val$nextBAbinf, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.perf
prop.table(rdtree.perf,1)
rdtree = rpart(nextBAbin ~ G + AB + BA + bats + age, data=ndf.train, method="class", parms=list(split="gini"))
prp(rdtree, type=4, extra=104, fallen.leaves=F, main="Decision Tree", faclen=0)
barplot(rdtree$variable.importance)
rdtree.pred = predict(rdtree, newdata=ndf.val,type="class")
rdtree.perf = table(ndf.val$nextBAbinf, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.perf
bin = 5
cutpoints <- quantile(ndf$nextBA, (0:bin)/bin)
ndf$nextBAbin = cut(ndf$nextBA, cutpoints, include.lowest = T)
ndf$nextBAbinf = factor(ndf$nextBAbin,
levels = c("[0.02,0.195]","(0.195,0.235]",
"(0.235,0.26]","(0.26,0.283]","(0.283,0.636]"),
labels = c("1stQtl","2ndQtl","3rdQtl","4thQtl","5thQtl"))
ndf.train = ndf[id.train,]
ndf.val = ndf[-id.train,]
#classification decision tree using binned nextBA
rdtree = rpart(nextBAbin ~ G + AB + BA + bats + age, data=ndf.train, method="class", parms=list(split="gini"))
prp(rdtree, type=4, extra=104, fallen.leaves=F, main="Decision Tree", faclen=0)
barplot(rdtree$variable.importance)
rdtree.pred = predict(rdtree, newdata=ndf.val,type="class")
rdtree.perf = table(ndf.val$nextBAbinf, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.perf
View(ndf.val)
View(ndf.val)
bin = 5
cutpoints <- quantile(ndf$nextBA, (0:bin)/bin)
ndf$nextBAbin = cut(ndf$nextBA, cutpoints, include.lowest = T)
ndf$nextBAbinf = factor(ndf$nextBAbin,
levels = c("[0.02,0.195]","(0.195,0.235]",
"(0.235,0.26]","(0.26,0.283]","(0.283,0.636]"),
labels = c("1stQtl","2ndQtl","3rdQtl","4thQtl","5thQtl"))
ndf.train = ndf[id.train,]
ndf.val = ndf[-id.train,]
#classification decision tree using binned nextBA
rdtree = rpart(nextBAbin ~ G + AB + BA + bats + age, data=ndf.train, method="class", parms=list(split="gini"))
prp(rdtree, type=4, extra=104, fallen.leaves=F, main="Decision Tree", faclen=0)
barplot(rdtree$variable.importance)
rdtree.pred = predict(rdtree, newdata=ndf.val,type="class")
rdtree.perf = table(ndf.val$nextBAbinf, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.perf
rdtree.pred = predict(rdtree, newdata=ndf.val,type="class")
rdtree.perf = table(ndf.val$nextBAbin, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.perf
bin = 5
cutpoints <- quantile(ndf$nextBA, (0:bin)/bin)
ndf$nextBAbin = cut(ndf$nextBA, cutpoints, include.lowest = T)
ndf$nextBAbinf = factor(ndf$nextBAbin,
levels = c("[0.02,0.195]","(0.195,0.235]",
"(0.235,0.26]","(0.26,0.283]","(0.283,0.636]"),
labels = c("1stQtl","2ndQtl","3rdQtl","4thQtl","5thQtl"))
ndf.train = ndf[id.train,]
ndf.val = ndf[-id.train,]
#classification decision tree using binned nextBA
rdtree = rpart(nextBAbinf ~ G + AB + BA + bats + age, data=ndf.train, method="class", parms=list(split="gini"))
prp(rdtree, type=4, extra=104, fallen.leaves=F, main="Decision Tree", faclen=0)
barplot(rdtree$variable.importance)
rdtree.pred = predict(rdtree, newdata=ndf.val,type="class")
rdtree.perf = table(ndf.val$nextBAbinf, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.perf
rdtree = rpart(nextBAbinf ~ G + SlugPct+ AB + BA + bats + age, data=ndf.train, method="class", parms=list(split="gini"))
prp(rdtree, type=4, extra=104, fallen.leaves=F, main="Decision Tree", faclen=0)
barplot(rdtree$variable.importance)
rdtree.pred = predict(rdtree, newdata=ndf.val,type="class")
rdtree.perf = table(ndf.val$nextBAbinf, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.perf
prop.table(rdtree.perf,1)
rdtree = rpart(nextBAbinf ~ G + OPS + AB + BA + bats + age, data=ndf.train, method="class", parms=list(split="gini"))
prp(rdtree, type=4, extra=104, fallen.leaves=F, main="Decision Tree", faclen=0)
barplot(rdtree$variable.importance)
rdtree.pred = predict(rdtree, newdata=ndf.val,type="class")
rdtree.perf = table(ndf.val$nextBAbinf, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.perf
rdtree = rpart(nextBAbinf ~ G + AB + bats + age, data=ndf.train, method="class", parms=list(split="gini"))
prp(rdtree, type=4, extra=104, fallen.leaves=F, main="Decision Tree", faclen=0)
barplot(rdtree$variable.importance)
rdtree.pred = predict(rdtree, newdata=ndf.val,type="class")
rdtree.perf = table(ndf.val$nextBAbinf, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.perf
rdtree = rpart(nextBAbinf ~ G + OPS + AB + BA + bats + age, data=ndf.train, method="class", parms=list(split="information"))
prp(rdtree, type=4, extra=104, fallen.leaves=F, main="Decision Tree", faclen=0)
barplot(rdtree$variable.importance)
rdtree.pred = predict(rdtree, newdata=ndf.val,type="class")
rdtree.perf = table(ndf.val$nextBAbinf, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.perf
rdtree = rpart(nextBAbinf ~ G + + SlugPct + OPS + AB + BA + bats + age, data=ndf.train, method="class", parms=list(split="information"))
prp(rdtree, type=4, extra=104, fallen.leaves=F, main="Decision Tree", faclen=0)
barplot(rdtree$variable.importance)
rdtree.pred = predict(rdtree, newdata=ndf.val,type="class")
rdtree.perf = table(ndf.val$nextBAbinf, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.perf
prop.table(rdtree.perf,1)
rdtree = rpart(nextBAbinf ~ G + + SlugPct + OBP + AB + BA + bats + age, data=ndf.train, method="class", parms=list(split="information"))
prp(rdtree, type=4, extra=104, fallen.leaves=F, main="Decision Tree", faclen=0)
barplot(rdtree$variable.importance)
rdtree.pred = predict(rdtree, newdata=ndf.val,type="class")
rdtree.perf = table(ndf.val$nextBAbinf, rdtree.pred, dnn=c("Actual","Predicted"))
rdtree.perf
rdtree = rpart(nextBAbinf ~ G + + SlugPct + OBP + AB + BA + bats + age, data=ndf.train, method="class", parms=list(split="information"))
prp(rdtree, type=4, extra=104, fallen.leaves=F, main="Decision Tree", faclen=0)
barplot(rdtree$variable.importance)
prp(rdtree, type=4, extra=104, fallen.leaves=F, main="Decision Tree", faclen=0)
